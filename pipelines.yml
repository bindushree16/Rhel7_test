resources:
  - name: repo_bindu
    type: GitRepo
    configuration:
      gitProvider: bindu_github
      path: bindushree16/Rhel7_test
#       files:  # optional
#         include: pipelines.yml
#         exclude: readme
      branches:  # optional
        include: debain
#         exclude: git
#       tags:  # optional
#         include: 
#         exclude: 
#       buildOn:  # optional
#         commit: true
#          pullRequestCreate: true
#          pullRequestClose: false
#          releaseCreate: false
#          tagCreate: false
#       shallowDepth: 10  # optional 
      
pipelines:
  - name: jfrog_rhel_pipeline
    steps:
      - name: test1
        type: Bash
        configuration: 
          priority: 0
          timeoutSeconds: 50000
#           nodePool: ubuntu_16
#           chronological: true
          environmentVariables:
            env1: value1
            env2: value2
          integrations:
            - name: aws_keys
#             - name: artifactoryIntegration  
          inputResources:
            - name: repo_bindu
          runtime:       
            type: image     #<image/host>
            image:
              custom:
                name: drydock/u16
                tag: master
#                 registry: art
#                 sourceRepository: docker # required if registry is artifactory
#                 region: <string> # required if registry is AWS
#                 options:
        execution:
          onExecute:
            - echo "test1"  
            - pwd
            - terraform --version
            - printenv
#             - echo $res_repo_bindu_resourcePath
#             - pushd $res_repo_bindu_resourcePath
            - pwd
            - sudo su
            - terraform init
            - pushd $res_repo_bindu_resourcePath
            - terraform init            
            - ls -la
#             - terraform plan -var-file="$PWD/keys.tfvar"
            - PWD=$(pwd)
            - echo PWD=$PWD
#             - pushd $res_repo_bindu_resourcePath
#             - chmod 777 provision.sh
#             - ./provision.sh
#             - popd

      - name: test2
        type: Bash
        configuration:
          affinityGroup: rpm
          priority: 0
          timeoutSeconds: 50000
#           nodePool: ubuntu_16
          chronological: true
          environmentVariables:
            env1: value1
            env2: value2
          integrations:
            - name: bindu_pem 
          inputSteps:
            - name: test1
          runtime:       
            type: image     #<image/host>
            image:
              custom:
                name: drydock/u16
                tag: master
        execution:
          onExecute:
            - echo "Test2"
            - printenv
            - PWD=$(pwd)
            - echo $int_bindu_pem_key > bindu.pem
            - cat $PWD/bindu.pem
            - echo $bindu_ip_address
            - chmod 600 $PWD/bindu.pem
            - ssh -i $PWD/bindu.pem ubuntu@$bindu_ip_address
            
      - name: test2
        type: Bash
        configuration: 
          priority: 0
          timeoutSeconds: 50000
# #           nodePool: ubuntu_16
#           chronological: true
          environmentVariables:
            env1: value1
            env2: value2
          integrations:
            - name: aws_keys
          inputSteps:
            - name: test1
          inputResources:
            - name: repo_bindu
          runtime:       
            type: image     #<image/host>
            image:
              custom:
                name: drydock/u16
                tag: master
        execution:
          onExecute:
            - echo "test3"  
            - pushd $res_repo_bindu_resourcePath
            - echo $PWD
            - echo "$bindu_ip_address"
            - terraform init
            - replace_envs $PWD/keys.tfvar
            - restore_pipeline_files jfrog_rhel_pipeline $PWD/terraform.tfstate
            - terraform destroy -auto-approve -var-file="$PWD/keys.tfvar"
            - popd

#       - name: test4
#         type: Bash
#         configuration:
#           affinityGroup: rpm
#           priority: 0
#           timeoutSeconds: 50000
# #           nodePool: ubuntu_16
#           chronological: true
#           environmentVariables:
#             env1: value1
#             env2: value2
# #           integrations:
# #             - name: dockerHubIntegration
# #             - name: artifactoryIntegration  
#           inputSteps:
#             - name: test3
# #           inputResources:
# #             - name: bindu_git
# #               trigger: true    # default true
# #           outputResources:
# #             - name: myOutputResource1  
#           runtime:       
#             type: image       #<image/host>
#             image:
#               auto:
#                 language: go
#                 versions:
#                   - 1.12.5
# # e
# #                 name: drydock/u16node
# #                 tag: master
# #                 registry: art
# #                 sourceRepository: docker # required if registry is artifactory
# #                 region: <string> # required if registry is AWS
# #                 options:
#         execution:
#           onExecute:
#             - echo "test4"  
#             - printenv
